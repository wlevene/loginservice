// Code generated by goctl. DO NOT EDIT!
package user

import (
	"context"
	"errors"

	"github.com/zeromicro/go-zero/core/stores/monc"
	"github.com/wlevene/mgm/v3"
)

var prefixUserCacheKey = "cache:user:"

type userModel interface {
	Insert(ctx context.Context, data *User) error
	FindOne(ctx context.Context, id string) (*User, error)
	Update(ctx context.Context, data *User) error
	Delete(ctx context.Context, id string) error
}

type defaultUserModel struct {
	conn *monc.Model
}

func newDefaultUserModel(conn *monc.Model) *defaultUserModel {
	return &defaultUserModel{conn: conn}
}

func (m *defaultUserModel) Insert(ctx context.Context, data *User) error {
	err := mgm.Coll(data).Create(data)
	return err
}

func (m *defaultUserModel) FindOne(ctx context.Context, id string) (*User, error) {
	if id == "" {
		return nil, errors.New("id is nil")
	}

	obj := &User{}

	coll := mgm.Coll(obj)
	err := coll.FindByID(id, obj)

	if err != nil {
		return nil, err
	}
	
	return obj, nil
}

func (m *defaultUserModel) Update(ctx context.Context, data *User) error {
	return mgm.Coll(data).Update(data)
}

func (m *defaultUserModel) Delete(ctx context.Context, id string) error {
	save_obj, err := m.FindOne(ctx, id)
	if err != nil {
		return err
	}

	if save_obj == nil {
		return errors.New("user is nil")
	}

	save_obj.SetDeleted(true)
	return nil
}
