// Code generated by goctl. DO NOT EDIT.
package loginattempts

import (
	"context"
	"errors"

	"github.com/wlevene/mgm/v3"
	"github.com/zeromicro/go-zero/core/stores/monc"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

var prefixLoginAttemptsCacheKey = "cache:loginAttempts:"

type loginAttemptsModel interface {
	Insert(ctx context.Context, data *LoginAttempts) error
	FindOne(ctx context.Context, id string) (*LoginAttempts, error)
	Update(ctx context.Context, data *LoginAttempts) error
	Delete(ctx context.Context, id string) error
	DeleteForce(ctx context.Context, id string) error
}

type defaultLoginAttemptsModel struct {
	conn *monc.Model
}

func newDefaultLoginAttemptsModel(conn *monc.Model) *defaultLoginAttemptsModel {
	return &defaultLoginAttemptsModel{conn: conn}
}

func (m *defaultLoginAttemptsModel) Insert(ctx context.Context, data *LoginAttempts) error {
	return mgm.Coll(data).Create(data)
}

func (m *defaultLoginAttemptsModel) FindOne(ctx context.Context, id string) (*LoginAttempts, error) {
	_, err := primitive.ObjectIDFromHex(id)
	if err != nil {
		return nil, ErrInvalidObjectId
	}

	var data LoginAttempts

	coll := mgm.Coll(&data)
	err = coll.FindByID(id, &data)

	if err != nil {
		return nil, err
	}

	return &data, nil
}

func (m *defaultLoginAttemptsModel) Update(ctx context.Context, data *LoginAttempts) error {
	return mgm.Coll(data).Update(data)
}

func (m *defaultLoginAttemptsModel) Delete(ctx context.Context, id string) error {
	_, err := primitive.ObjectIDFromHex(id)
	if err != nil {
		return ErrInvalidObjectId
	}

	save_obj, err := m.FindOne(ctx, id)
	if err != nil {
		return err
	}

	if save_obj == nil {
		return errors.New("data is nil")
	}

	save_obj.SetDeleted(true)
	return nil
}

func (m *defaultLoginAttemptsModel) DeleteForce(ctx context.Context, id string) error {
	_, err := primitive.ObjectIDFromHex(id)
	if err != nil {
		return ErrInvalidObjectId
	}

	save_obj, err := m.FindOne(ctx, id)
	if err != nil {
		return err
	}

	if save_obj == nil {
		return errors.New("data is nil")
	}

	mgm.Coll(save_obj).Delete(save_obj)
	return nil
}
